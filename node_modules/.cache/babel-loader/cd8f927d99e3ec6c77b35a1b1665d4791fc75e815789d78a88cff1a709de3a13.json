{"ast":null,"code":"var _jsxFileName = \"/Users/premnazeermohamedali/Prem/Tech/React-Product-FE/product/src/app/ProductStore.js\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    products: []\n  },\n  reducers: {\n    addProduct: state => {\n      state.products = [...state.products];\n    },\n    removePlayer: state => {\n      state.products = [{}];\n    }\n  }\n});\nexport const {\n  addProduct,\n  removeProduct\n} = counterSlice.actions;\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nconst ProductStore = () => {\n  // Can still subscribe to the store\n  store.subscribe(() => console.log(store.getState()));\n\n  // Still pass action objects to `dispatch`, but they're created for us\n  store.dispatch(addProduct());\n  // {value: 1}\n  store.dispatch(addProduct());\n  // {value: 2}\n  store.dispatch(removeProduct());\n  // {value: 1}\n  return /*#__PURE__*/_jsxDEV(\"b\", {\n    children: \"Products in the Store\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_c = ProductStore;\nexport default ProductStore;\nvar _c;\n$RefreshReg$(_c, \"ProductStore\");","map":{"version":3,"names":["createSlice","configureStore","jsxDEV","_jsxDEV","counterSlice","name","initialState","products","reducers","addProduct","state","removePlayer","removeProduct","actions","store","reducer","ProductStore","subscribe","console","log","getState","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/premnazeermohamedali/Prem/Tech/React-Product-FE/product/src/app/ProductStore.js"],"sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit'\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    products: []\n  },\n  reducers: {\n    addProduct: state => {\n      state.products = [...state.products]\n    },\n    removePlayer: state => {\n      state.products = [{}]\n    }\n  }\n})\n\nexport const { addProduct, removeProduct } = counterSlice.actions\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n})\n\n\nconst ProductStore = () => {\n\n// Can still subscribe to the store\nstore.subscribe(() => console.log(store.getState()))\n\n// Still pass action objects to `dispatch`, but they're created for us\nstore.dispatch(addProduct())\n// {value: 1}\nstore.dispatch(addProduct())\n// {value: 2}\nstore.dispatch(removeProduct())\n// {value: 1}\nreturn (<b>Products in the Store</b>)\n} \nexport default ProductStore"],"mappings":";AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAEC,KAAK,IAAI;MACnBA,KAAK,CAACH,QAAQ,GAAG,CAAC,GAAGG,KAAK,CAACH,QAAQ,CAAC;IACtC,CAAC;IACDI,YAAY,EAAED,KAAK,IAAI;MACrBA,KAAK,CAACH,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,UAAU;EAAEG;AAAc,CAAC,GAAGR,YAAY,CAACS,OAAO;AAEjE,MAAMC,KAAK,GAAGb,cAAc,CAAC;EAC3Bc,OAAO,EAAEX,YAAY,CAACW;AACxB,CAAC,CAAC;AAGF,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAE3B;EACAF,KAAK,CAACG,SAAS,CAAC,MAAMC,OAAO,CAACC,GAAG,CAACL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEpD;EACAN,KAAK,CAACO,QAAQ,CAACZ,UAAU,CAAC,CAAC,CAAC;EAC5B;EACAK,KAAK,CAACO,QAAQ,CAACZ,UAAU,CAAC,CAAC,CAAC;EAC5B;EACAK,KAAK,CAACO,QAAQ,CAACT,aAAa,CAAC,CAAC,CAAC;EAC/B;EACA,oBAAQT,OAAA;IAAAmB,QAAA,EAAG;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACpC,CAAC;AAAAC,EAAA,GAbKX,YAAY;AAclB,eAAeA,YAAY;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}